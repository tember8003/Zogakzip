// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Group {
  id           Int      @id @default(autoincrement())
  name         String   @unique
  password     String
  isPublic     Boolean
  imageUrl     String?
  likeCount    Int      @default(0)
  postCount    Int      @default(0)
  badgeCount   Int      @default(0)
  introduction String?
  createdAt    DateTime @default(now())
  Badge        Badge[]
  Post         Post[]
}

enum Tag {
  TAG1
  TAG2
  TAG3
}

model Badge {
  id          Int     @id @default(autoincrement())
  name        String
  description String? //배지 설명 -> 빠질 수도 있음.
  group       Group   @relation(fields: [groupId], references: [id])
  groupId     Int

  // name과 groupId의 조합을 유니크로 설정 -> badge 등록 중 error가 발생하는 문제 해결용
  @@unique([name, groupId])
}

model Post {
  id           Int      @id @default(autoincrement())
  nickname     String
  title        String
  password     String
  content      String
  imageUrl     String?
  //tag          Tag[] 일단 태그 제외.
  likeCount    Int      @default(0)
  commentCount Int      @default(0)
  moment       DateTime
  createdAt    DateTime @default(now())
  isPublic     Boolean
  location     String

  group   Group @relation(fields: [groupId], references: [id]) // 단일 필드로 관계 설정
  groupId Int
}
